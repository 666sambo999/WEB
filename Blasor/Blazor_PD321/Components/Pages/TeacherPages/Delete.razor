@page "/teachers/delete"
@using Microsoft.EntityFrameworkCore
@using Blazor_PD321.Models
@inject IDbContextFactory<Blazor_PD321.Data.Blazor_PD321Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Teacher</h2>
    <hr />
    @if (teacher is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">WorkSize</dt>
            <dd class="col-sm-10">@teacher.WorkSize</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastName</dt>
            <dd class="col-sm-10">@teacher.LastName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">FirstName</dt>
            <dd class="col-sm-10">@teacher.FirstName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MiddleName</dt>
            <dd class="col-sm-10">@teacher.MiddleName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BirsrDate</dt>
            <dd class="col-sm-10">@teacher.BirsrDate</dd>
        </dl>
        <EditForm method="post" Model="teacher" OnValidSubmit="DeleteTeacher" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(teacher is null)">Delete</button> |
            <a href="/teachers">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Teacher? teacher;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        teacher = await context.Teacher.FirstOrDefaultAsync(m => m.Id == Id);

        if (teacher is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteTeacher()
    {
        using var context = DbFactory.CreateDbContext();
        context.Teacher.Remove(teacher!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/teachers");
    }
}
