@page
@model ContosoUniversity.Pages.Students.IndexModel

@{
    ViewData["Title"] = "Студинтик";
}

<h1>Students</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form asp-page="./Index" method="get">
    <div class="form-actions">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Reset filter</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.LastNameSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Stud[0].LastName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.FirstNameSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Stud[0].FirstName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Stud[0].EnrollmentDate)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Stud) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    string prevDisab = Model.Stud.HasPreviosPage ? "" : "disabled";
    string nextDisab = Model.Stud.HasNextPage ? "" : "disabled";
}
@* // передаем параметpы в метод OnGetAsync в IndexModel
 *@
 <a 
   asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Stud.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisab">
    Previous
</a>
<a 
   asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Stud.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisab">
    Next
</a>